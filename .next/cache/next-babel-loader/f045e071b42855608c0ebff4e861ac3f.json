{"ast":null,"code":"var _jsxFileName = \"/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/blog.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/Link';\nimport fs from 'fs';\nimport Layout from './components/Layout';\nimport BlogPostLink from './components/smallComponents/blogPostLink';\nimport matter from 'gray-matter';\n\nconst Blog = ({\n  slugs\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, slugs.map(slug => {\n    return __jsx(\"li\", {\n      key: slug,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      as: '/blog/' + slug,\n      href: '/blog/' + slug,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }, slug)));\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, slugs.map(slug => {\n    return __jsx(BlogPostLink, {\n      slug: slug,\n      key: slug,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default Layout(Blog); // This adds the global layout (header & footer ect)\n\nexport const getStaticProps = async () => {\n  const files = fs.readdirSync('posts');\n  const postsMeta = files.map(post => {\n    matter(post);\n  });\n  return {\n    props: {\n      slugs: files.map(filename => filename.replace('.md', '')),\n      postMeta: postMeta\n    }\n  };\n}; // export const getStaticProps = async ({params: {slug}}) => {\n//   const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n//   const parsedMarkdown = matter(markdownWithMeta) // meta is also known as 'frontmatter'\n//   const htmlString = marked(parsedMarkdown.content)\n//   return {\n//       props: {\n//           htmlString,\n//           data: parsedMarkdown.data\n//       }\n//   }\n// }","map":{"version":3,"sources":["/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/blog.js"],"names":["Link","fs","Layout","BlogPostLink","matter","Blog","slugs","map","slug","getStaticProps","files","readdirSync","postsMeta","post","props","filename","replace","postMeta"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAWC,IAAI,IAAI;AAClB,WACA;AAAI,MAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,EAAE,EAAE,WAASA,IAAnB;AAAyB,MAAA,IAAI,EAAE,WAASA,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CADF,CADF,CADA;AAOD,GARA,CADH,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACC,GAAN,CAAWC,IAAI,IAAI;AAClB,WACE,MAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAA0B,MAAA,GAAG,EAAEA,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJA,CADH,CAbF,CADF;AAwBD,CAzBD;;AA2BA,eAAeN,MAAM,CAACG,IAAD,CAArB,C,CAA4B;;AAE5B,OAAO,MAAMI,cAAc,GAAG,YAAY;AACxC,QAAMC,KAAK,GAAGT,EAAE,CAACU,WAAH,CAAe,OAAf,CAAd;AAEA,QAAMC,SAAS,GAAGF,KAAK,CAACH,GAAN,CAAUM,IAAI,IAAI;AAClCT,IAAAA,MAAM,CAACS,IAAD,CAAN;AACD,GAFiB,CAAlB;AAIA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLR,MAAAA,KAAK,EAAEI,KAAK,CAACH,GAAN,CAAUQ,QAAQ,IAAIA,QAAQ,CAACC,OAAT,CAAiB,KAAjB,EAAuB,EAAvB,CAAtB,CADF;AAELC,MAAAA,QAAQ,EAAEA;AAFL;AADF,GAAP;AAMD,CAbM,C,CAeP;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Link from 'next/Link';\nimport fs from 'fs';\nimport Layout from './components/Layout';\nimport BlogPostLink from './components/smallComponents/blogPostLink'\nimport matter from 'gray-matter'; \n\nconst Blog = ({slugs}) => {\n  return (\n    <div>\n      <ul>\n        {slugs.map( slug => {\n          return(\n          <li key={slug}>\n            <Link as={'/blog/'+slug} href={'/blog/'+slug}>\n              <a>{slug}</a>\n            </Link>\n          </li>\n          )\n        })}\n      </ul>\n\n      <div>\n        {slugs.map( slug => {\n          return(\n            <BlogPostLink slug={slug} key={slug}/>\n          )\n        })}\n      </div>\n\n    </div> \n  )\n}\n\nexport default Layout(Blog) // This adds the global layout (header & footer ect)\n\nexport const getStaticProps = async () => {\n  const files = fs.readdirSync('posts')\n  \n  const postsMeta = files.map(post => {\n    matter(post)\n  })\n\n  return {\n    props: { \n      slugs: files.map(filename => filename.replace('.md','')),\n      postMeta: postMeta\n    }\n  }\n}\n\n// export const getStaticProps = async ({params: {slug}}) => {\n\n//   const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n\n//   const parsedMarkdown = matter(markdownWithMeta) // meta is also known as 'frontmatter'\n\n//   const htmlString = marked(parsedMarkdown.content)\n\n//   return {\n//       props: {\n//           htmlString,\n//           data: parsedMarkdown.data\n//       }\n//   }\n// }"]},"metadata":{},"sourceType":"module"}