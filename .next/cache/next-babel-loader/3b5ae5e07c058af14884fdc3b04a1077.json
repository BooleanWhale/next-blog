{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/components/smallComponents/test.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport matter from 'gray-matter'; //parses metadata from markdown\n\nimport marked from 'marked'; //turns markdown into html\n\nvar PostMeta = function PostMeta(props) {\n  var markdownWithMeta = fs.readFileSync(path.join('posts', slug + '.md')).toString();\n  var parsedMarkdown = matter(markdownWithMeta); // meta is also known as 'frontmatter'\n\n  var htmlString = marked(parsedMarkdown.content);\n  return {\n    props: {\n      htmlString: htmlString,\n      data: parsedMarkdown.data\n    }\n  };\n};\n\n_c = PostMeta;\n\nvar Post = function Post(_ref) {\n  var htmlString = _ref.htmlString,\n      data = _ref.data;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, data.title), __jsx(\"meta\", {\n    title: \"description\",\n    content: data.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"blog\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: htmlString\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, data.description));\n};\n\n_c2 = Post;\n// this function fetches the data to create the path\nexport var __N_SSG = true;\nexport default PostMeta; // this generates dynamic routes \n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostMeta\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/components/smallComponents/test.js"],"names":["React","fs","path","Head","matter","marked","PostMeta","props","markdownWithMeta","readFileSync","join","slug","toString","parsedMarkdown","htmlString","content","data","Post","title","description","__html"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAAkC;;AAClC,OAAOC,MAAP,MAAmB,QAAnB,C,CAA6B;;AAE7B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAExB,MAAMC,gBAAgB,GAAGP,EAAE,CAACQ,YAAH,CAAgBP,IAAI,CAACQ,IAAL,CAAU,OAAV,EAAmBC,IAAI,GAAC,KAAxB,CAAhB,EAAgDC,QAAhD,EAAzB;AAEA,MAAMC,cAAc,GAAGT,MAAM,CAACI,gBAAD,CAA7B,CAJwB,CAIwB;;AAEhD,MAAMM,UAAU,GAAGT,MAAM,CAACQ,cAAc,CAACE,OAAhB,CAAzB;AAEA,SAAO;AACHR,IAAAA,KAAK,EAAE;AACHO,MAAAA,UAAU,EAAVA,UADG;AAEHE,MAAAA,IAAI,EAAEH,cAAc,CAACG;AAFlB;AADJ,GAAP;AAMH,CAdD;;KAAMV,Q;;AAgBN,IAAMW,IAAI,GAAG,SAAPA,IAAO,OAAwB;AAAA,MAAtBH,UAAsB,QAAtBA,UAAsB;AAAA,MAAVE,IAAU,QAAVA,IAAU;AAEjC,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,IAAI,CAACE,KAAb,CADJ,EAEI;AAAM,IAAA,KAAK,EAAC,aAAZ;AAA0B,IAAA,OAAO,EAAEF,IAAI,CAACG,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEN;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,IAAI,CAACG,WADV,CARJ,CADJ;AAaF,CAfF;;MAAMF,I;AAiDN;;AAGA,eAAeX,QAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport matter from 'gray-matter'; //parses metadata from markdown\nimport marked from 'marked'; //turns markdown into html\n\nconst PostMeta = (props) => {\n    \n    const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n\n    const parsedMarkdown = matter(markdownWithMeta) // meta is also known as 'frontmatter'\n\n    const htmlString = marked(parsedMarkdown.content)\n\n    return {\n        props: {\n            htmlString,\n            data: parsedMarkdown.data\n        }\n    }\n}\n\nconst Post = ({htmlString, data}) => {\n\n    return(\n        <>\n            <Head>\n                <title>{data.title}</title>\n                <meta title=\"description\" content={data.description}/>\n            </Head>\n            <div className=\"blog\">\n                <div dangerouslySetInnerHTML={{ __html: htmlString }} />\n            </div>\n            <div>\n                {data.description}\n            </div>\n        </>\n)}; \n\nexport const getStaticPaths = async () => {\n\n    const posts = fs.readdirSync('posts')\n\n    const paths = posts.map(post => ({\n        params: {\n            slug: post.replace(\".md\", \"\")\n        }\n    }))\n\n    return {\n        paths,\n        fallback: false\n    }\n}\n// this is a new SSG function, it create the path\n\nexport const getStaticProps = async ({params: {slug}}) => {\n\n    const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n\n    const parsedMarkdown = matter(markdownWithMeta) // meta is also known as 'frontmatter'\n\n    const htmlString = marked(parsedMarkdown.content)\n\n    return {\n        props: {\n            htmlString,\n            data: parsedMarkdown.data\n        }\n    }\n}\n// this function fetches the data to create the path\n\n\nexport default PostMeta;\n\n// this generates dynamic routes \n"]},"metadata":{},"sourceType":"module"}