{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport matter from 'gray-matter'; //parses metadata from markdown\n\nimport marked from 'marked'; //turns markdown into html\n\nimport Layout from '../components/Layout';\n\nconst Post = ({\n  htmlString,\n  data\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, data.title), __jsx(\"meta\", {\n    title: \"description\",\n    content: data.description\n  })), __jsx(\"div\", {\n    className: \"blog\"\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: htmlString\n    }\n  })), __jsx(\"div\", null, data.description));\n};\n\nexport const getStaticPaths = async () => {\n  const posts = fs.readdirSync('posts');\n  const paths = posts.map(post => ({\n    params: {\n      slug: post.replace(\".md\", \"\")\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}; // this is a new SSG function, it create the path\n\nexport const getStaticProps = async ({\n  params: {\n    slug\n  }\n}) => {\n  const markdownWithMeta = fs.readFileSync(path.join('posts', slug + '.md')).toString();\n  const parsedMarkdown = matter(markdownWithMeta); // meta is also known as 'frontmatter'\n\n  const htmlString = marked(parsedMarkdown.content);\n  return {\n    props: {\n      htmlString,\n      data: parsedMarkdown.data\n    }\n  };\n}; // this function fetches the data to create the path\n\nexport default Layout(Post); // this generates dynamic routes","map":null,"metadata":{},"sourceType":"module"}