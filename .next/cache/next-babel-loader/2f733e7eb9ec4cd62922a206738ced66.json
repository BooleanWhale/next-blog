{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport matter from 'gray-matter'; //parses metadata from markdown\n\nimport marked from 'marked'; //turns markdown into html\n\nexport default function BlogPostLink(_x) {\n  return _BlogPostLink.apply(this, arguments);\n} // export const getStaticProps = async ({params: {slug}}) => {\n//     const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n//     const parsedMarkdown = matter(markdownWithMeta) // meta is also known as 'frontmatter'\n//     const htmlString = marked(parsedMarkdown.content)\n//     return {\n//         props: {\n//             htmlString,\n//             data: parsedMarkdown.data\n//         }\n//     }\n// }\n// // this function fetches the data to create the path\n\n_c2 = BlogPostLink;\n\nfunction _BlogPostLink() {\n  _BlogPostLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var slug, markdownWithMeta, parsedMarkdown;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = _ref.params.slug;\n            markdownWithMeta = fs.readFileSync(path.join('posts', slug + '.md')).toString();\n            parsedMarkdown = matter(markdownWithMeta);\n            return _context.abrupt(\"return\", \"$slug\");\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _BlogPostLink.apply(this, arguments);\n}\n\n_c = BlogPostLink;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BlogPostLink\");\n$RefreshReg$(_c2, \"BlogPostLink\");","map":{"version":3,"sources":["/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/components/smallComponents/blogPostLink.js"],"names":["React","fs","path","Head","matter","marked","BlogPostLink","slug","params","markdownWithMeta","readFileSync","join","toString","parsedMarkdown"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAAkC;;AAClC,OAAOC,MAAP,MAAmB,QAAnB,C,CAA6B;;AAE7B,wBAA8BC,YAA9B;AAAA;AAAA,C,CAUA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAzB8BA,Y;;;2EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuCC,YAAAA,IAAvC,QAA8BC,MAA9B,CAAuCD,IAAvC;AAELE,YAAAA,gBAFK,GAEcR,EAAE,CAACS,YAAH,CAAgBR,IAAI,CAACS,IAAL,CAAU,OAAV,EAAmBJ,IAAI,GAAC,KAAxB,CAAhB,EAAgDK,QAAhD,EAFd;AAILC,YAAAA,cAJK,GAIYT,MAAM,CAACK,gBAAD,CAJlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeH,Y","sourcesContent":["import React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport matter from 'gray-matter'; //parses metadata from markdown\nimport marked from 'marked'; //turns markdown into html\n\nexport default async function BlogPostLink ({params: {slug}}) {\n\n    const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n\n    const parsedMarkdown = matter(markdownWithMeta);\n\n\n    return `$slug`;\n}\n\n// export const getStaticProps = async ({params: {slug}}) => {\n\n//     const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n\n//     const parsedMarkdown = matter(markdownWithMeta) // meta is also known as 'frontmatter'\n\n//     const htmlString = marked(parsedMarkdown.content)\n\n//     return {\n//         props: {\n//             htmlString,\n//             data: parsedMarkdown.data\n//         }\n//     }\n// }\n// // this function fetches the data to create the path"]},"metadata":{},"sourceType":"module"}