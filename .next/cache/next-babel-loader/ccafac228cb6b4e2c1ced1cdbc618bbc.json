{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/components/smallComponents/test.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\n\n//turns markdown into html\nvar Post = function Post(_ref) {\n  var htmlString = _ref.htmlString,\n      data = _ref.data;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, data.title), __jsx(\"meta\", {\n    title: \"description\",\n    content: data.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"blog\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: htmlString\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, data.description));\n};\n\n_c = Post;\n// this function fetches the data to create the path\nexport var __N_SSG = true;\nexport function getMeta(props) {\n  return getStaticProps(props);\n}\nexport default getStaticProps; // this generates dynamic routes \n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/components/smallComponents/test.js"],"names":["React","Head","Post","htmlString","data","title","description","__html","getMeta","props","getStaticProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,IAAP,MAAiB,WAAjB;;AAE6B;AAE7B,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAwB;AAAA,MAAtBC,UAAsB,QAAtBA,UAAsB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAEjC,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,IAAI,CAACC,KAAb,CADJ,EAEI;AAAM,IAAA,KAAK,EAAC,aAAZ;AAA0B,IAAA,OAAO,EAAED,IAAI,CAACE,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEJ;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACE,WADV,CARJ,CADJ;AAaF,CAfF;;KAAMJ,I;AAiDN;;AAEA,OAAO,SAASM,OAAT,CAAkBC,KAAlB,EAAyB;AAC5B,SAAOC,cAAc,CAACD,KAAD,CAArB;AACH;AAED,eAAeC,cAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport matter from 'gray-matter'; //parses metadata from markdown\nimport marked from 'marked'; //turns markdown into html\n\nconst Post = ({htmlString, data}) => {\n\n    return(\n        <>\n            <Head>\n                <title>{data.title}</title>\n                <meta title=\"description\" content={data.description}/>\n            </Head>\n            <div className=\"blog\">\n                <div dangerouslySetInnerHTML={{ __html: htmlString }} />\n            </div>\n            <div>\n                {data.description}\n            </div>\n        </>\n)}; \n\nexport const getStaticPaths = async () => {\n\n    const posts = fs.readdirSync('posts')\n\n    const paths = posts.map(post => ({\n        params: {\n            slug: post.replace(\".md\", \"\")\n        }\n    }))\n\n    return {\n        paths,\n        fallback: false\n    }\n}\n// this is a new SSG function, it create the path\n\nexport const getStaticProps = async ({params: {slug}}) => {\n\n    const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n\n    const parsedMarkdown = matter(markdownWithMeta) // meta is also known as 'frontmatter'\n\n    const htmlString = marked(parsedMarkdown.content)\n\n    return {\n        props: {\n            htmlString,\n            data: parsedMarkdown.data\n        }\n    }\n}\n// this function fetches the data to create the path\n\nexport function getMeta (props) {\n    return getStaticProps(props);\n}\n\nexport default getStaticProps;\n\n// this generates dynamic routes \n"]},"metadata":{},"sourceType":"module"}