{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/[slug].js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\n//turns markdown into html\nimport Head from 'next/head';\n\nvar Post = function Post(_ref) {\n  var contents = _ref.contents,\n      data = _ref.data;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"data.title\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Contents bellow:\"), __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, contents));\n};\n\n_c = Post;\n// this function fetches the data to create the path\nexport var __N_SSG = true;\nexport default Post; // this generates dynamic routes \n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/[slug].js"],"names":["React","Head","Post","contents","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGkC;AAClC,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAsB;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC/B,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,QAAN,CALJ,CADJ;AAQF,CATF;;KAAMD,I;AA4CN;;AAEA,eAAeA,IAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter'; //turns markdown into html\nimport Head from 'next/head';\n\nconst Post = ({contents, data}) => {\n    return(\n        <>\n            <Head>\n                <title>data.title</title>\n            </Head>\n            <div>Contents bellow:</div>\n            <pre>{contents}</pre>\n        </>\n)}; \n\nexport const getStaticPaths = async () => {\n\n    const files = fs.readdirSync('posts')\n    console.log('files: ', files)\n\n    const paths = files.map(filename => ({\n        params: {\n            slug: filename.replace(\".md\", \"\")\n            //slug: filename.slice(0, filename.length - 3)\n        }\n    }))\n    console.log('paths: ', paths)\n\n    return {\n        paths,\n        fallback: false\n    }\n}\n// this is a new SSG function, it create the path\n\nexport const getStaticProps = async ({params: {slug}}) => {\n\n    const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n\n    const parsedMarkdown = matter(markdownWithMeta)\n\n    return {\n        props: {\n            contents: parsedMarkdown.content,\n            data: parsedMarkdown.data\n        }\n    }\n}\n// this function fetches the data to create the path\n\nexport default Post;\n\n// this generates dynamic routes "]},"metadata":{},"sourceType":"module"}