{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/blog.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/Link';\nimport path from 'path';\nimport Layout from './components/Layout';\n\n//turns markdown into html\nvar Blog = function Blog(_ref) {\n  var slugs = _ref.slugs;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    className: \"test\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }, \"tests\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, slugs.map(function (post) {\n    var slug = post.path;\n    return __jsx(\"li\", {\n      key: slug,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      as: '/blog/' + slug,\n      href: '/blog/' + slug,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, slug)));\n  })));\n};\n\n_c = Blog;\nexport var __N_SSG = true;\nexport default _c2 = Layout(Blog); // This adds the global layout (header & footer ect)\n// export const getStaticProps = async () => {\n//   const posts = fs.readdirSync('posts')\n//   return {\n//     props: { \n//       slugs: posts.map(filename => filename.replace('.md',''))\n//     }\n//   }\n// }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Blog\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/blog.js"],"names":["Link","path","Layout","Blog","slugs","map","post","slug"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAE6B;AAG7B,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAL,EACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAW,UAAAC,IAAI,EAAI;AAClB,QAAMC,IAAI,GAAGD,IAAI,CAACL,IAAlB;AACA,WACA;AAAI,MAAA,GAAG,EAAEM,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,EAAE,EAAE,WAASA,IAAnB;AAAyB,MAAA,IAAI,EAAE,WAASA,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CADF,CADF,CADA;AAOD,GATA,CADH,CADF,CADF;AAiBD,CAlBD;;KAAMJ,I;;AAoBN,qBAAeD,MAAM,CAACC,IAAD,CAArB,C,CAA4B;AAmC5B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Link from 'next/Link'\nimport fs from 'fs'\nimport path from 'path';\nimport Layout from './components/Layout';\nimport matter from 'gray-matter'; //parses metadata from markdown\nimport marked from 'marked'; //turns markdown into html\n\n\nconst Blog = ({slugs}) => {\n  return (\n    <div><p className=\"test\">tests</p>\n      <ul>\n        {slugs.map( post => {\n          const slug = post.path\n          return(\n          <li key={slug}>\n            <Link as={'/blog/'+slug} href={'/blog/'+slug}>\n              <a>{slug}</a>\n            </Link>\n          </li>\n          )\n        })}\n      </ul>\n      {/* <BlogPosts/> */}\n    </div> \n  )\n}\n\nexport default Layout(Blog) // This adds the global layout (header & footer ect)\n\n\n\nconst formatPost = async ({params: {slug}}) => {\n\n  const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n\n  const parsedMarkdown = matter(markdownWithMeta) // meta is also known as 'frontmatter'\n\n  const htmlString = marked(parsedMarkdown.content)\n\n  const path = slug.toString();\n\n  return {\n      props: {\n          path,\n          htmlString,\n          data: parsedMarkdown.data\n      }\n  }\n}\n\nexport const getStaticProps = async () => {\n  const posts = fs.readdirSync('posts')\n\n  return {\n    props: { \n      slugs: posts.map(filename => formatPost(filename))\n    }\n  }\n}\n\n\n\n// export const getStaticProps = async () => {\n//   const posts = fs.readdirSync('posts')\n\n//   return {\n//     props: { \n//       slugs: posts.map(filename => filename.replace('.md',''))\n//     }\n//   }\n// }"]},"metadata":{},"sourceType":"module"}