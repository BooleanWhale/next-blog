{"ast":null,"code":"var _jsxFileName = \"/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/components/smallComponents/test.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport matter from 'gray-matter'; //parses metadata from markdown\n\nimport marked from 'marked'; //turns markdown into html\n\nconst Post = ({\n  htmlString,\n  data\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, data.title), __jsx(\"meta\", {\n    title: \"description\",\n    content: data.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: htmlString\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, data.description));\n};\n\nexport const getStaticPaths = async () => {\n  const posts = fs.readdirSync('posts');\n  const paths = posts.map(post => ({\n    params: {\n      slug: post.replace(\".md\", \"\")\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}; // this is a new SSG function, it create the path\n\nexport const getStaticProps = async ({\n  params: {\n    slug\n  }\n}) => {\n  const markdownWithMeta = fs.readFileSync(path.join('posts', slug + '.md')).toString();\n  const parsedMarkdown = matter(markdownWithMeta); // meta is also known as 'frontmatter'\n\n  const htmlString = marked(parsedMarkdown.content);\n  return {\n    props: {\n      htmlString,\n      data: parsedMarkdown.data\n    }\n  };\n}; // this function fetches the data to create the path\n\nexport default Layout(Post); // this generates dynamic routes","map":{"version":3,"sources":["/Users/ashleysaleem-west/Documents/GitHub/next-blog/pages/components/smallComponents/test.js"],"names":["React","fs","path","Head","matter","marked","Post","htmlString","data","title","description","__html","getStaticPaths","posts","readdirSync","paths","map","post","params","slug","replace","fallback","getStaticProps","markdownWithMeta","readFileSync","join","toString","parsedMarkdown","content","props","Layout"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAAkC;;AAClC,OAAOC,MAAP,MAAmB,QAAnB,C,CAA6B;;AAE7B,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAAwB;AAEjC,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,IAAI,CAACC,KAAb,CADJ,EAEI;AAAM,IAAA,KAAK,EAAC,aAAZ;AAA0B,IAAA,OAAO,EAAED,IAAI,CAACE,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEJ;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACE,WADV,CARJ,CADJ;AAaF,CAfF;;AAiBA,OAAO,MAAME,cAAc,GAAG,YAAY;AAEtC,QAAMC,KAAK,GAAGZ,EAAE,CAACa,WAAH,CAAe,OAAf,CAAd;AAEA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,KAAK;AAC7BC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAEF,IAAI,CAACG,OAAL,CAAa,KAAb,EAAoB,EAApB;AADF;AADqB,GAAL,CAAd,CAAd;AAMA,SAAO;AACHL,IAAAA,KADG;AAEHM,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH,CAdM,C,CAeP;;AAEA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAACJ,EAAAA,MAAM,EAAE;AAACC,IAAAA;AAAD;AAAT,CAAP,KAA4B;AAEtD,QAAMI,gBAAgB,GAAGtB,EAAE,CAACuB,YAAH,CAAgBtB,IAAI,CAACuB,IAAL,CAAU,OAAV,EAAmBN,IAAI,GAAC,KAAxB,CAAhB,EAAgDO,QAAhD,EAAzB;AAEA,QAAMC,cAAc,GAAGvB,MAAM,CAACmB,gBAAD,CAA7B,CAJsD,CAIN;;AAEhD,QAAMhB,UAAU,GAAGF,MAAM,CAACsB,cAAc,CAACC,OAAhB,CAAzB;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHtB,MAAAA,UADG;AAEHC,MAAAA,IAAI,EAAEmB,cAAc,CAACnB;AAFlB;AADJ,GAAP;AAMH,CAdM,C,CAeP;;AAGA,eAAesB,MAAM,CAACxB,IAAD,CAArB,C,CAEA","sourcesContent":["import React from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport Head from 'next/head';\nimport matter from 'gray-matter'; //parses metadata from markdown\nimport marked from 'marked'; //turns markdown into html\n\nconst Post = ({htmlString, data}) => {\n\n    return(\n        <>\n            <Head>\n                <title>{data.title}</title>\n                <meta title=\"description\" content={data.description}/>\n            </Head>\n            <div className=\"blog\">\n                <div dangerouslySetInnerHTML={{ __html: htmlString }} />\n            </div>\n            <div>\n                {data.description}\n            </div>\n        </>\n)}; \n\nexport const getStaticPaths = async () => {\n\n    const posts = fs.readdirSync('posts')\n\n    const paths = posts.map(post => ({\n        params: {\n            slug: post.replace(\".md\", \"\")\n        }\n    }))\n\n    return {\n        paths,\n        fallback: false\n    }\n}\n// this is a new SSG function, it create the path\n\nexport const getStaticProps = async ({params: {slug}}) => {\n\n    const markdownWithMeta = fs.readFileSync(path.join('posts', slug+'.md')).toString();\n\n    const parsedMarkdown = matter(markdownWithMeta) // meta is also known as 'frontmatter'\n\n    const htmlString = marked(parsedMarkdown.content)\n\n    return {\n        props: {\n            htmlString,\n            data: parsedMarkdown.data\n        }\n    }\n}\n// this function fetches the data to create the path\n\n\nexport default Layout(Post);\n\n// this generates dynamic routes \n"]},"metadata":{},"sourceType":"module"}